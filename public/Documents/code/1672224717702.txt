#include "CommonFunction.h"
#include <iostream>

bool Init()
{
	if (SDL_Init(SDL_INIT_EVERYTHING) == -1)
	{
		std::cout << "ERROR Init()\n";
		return false;
	}
	g_screen = SDL_SetVideoMode(g_SCREEN_WIDTH, g_SCREEN_HEIGHT, BPP, SDL_SWSURFACE);
	if (g_screen == NULL)
		return false;
	if (Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, 2, 2048) == -1)
	{
		printf("%s", Mix_GetError());
	}
	g_bk_music = Mix_LoadMUS("");
	if (g_bk_music == NULL)
	{
		std::cout << "ERROR Background Music\n";
	}
	return true;
}
enum Status
{
	ERROR_screen = 0, StartScreen, GameScreen, GameOver, PauseScreen
};
bool CheckMouse(SDL_Event& events, const int& Xo, const int& Yo, const int& Width, const int& Height)
{
	int xMouse, yMouse;
	SDL_GetMouseState(&xMouse, &yMouse);
	// Xo <= xMouse <= Xo+Width
	// Yo <= yMouse <= Yo+Height
	if (events.type == SDL_KEYDOWN && Xo <= xMouse && xMouse <= Xo + Width && Yo <= yMouse && yMouse <= Yo + Height)
		return true;
	else
		return false;
}

void ERROR_Screen()
{

}

bool Start_Game(int& status, SDL_Event& events)
{
	g_background = CommonFunction::LoadImage("");
	if (g_background == NULL)
		return false;
	CommonFunction::ApplySurface(g_background, g_screen, 0, 0);
	if (CheckMouse(events, 100, 100, 50, 50) == true)
		status = GameScreen;
	return true;
}
bool Game_screen(int& status, SDL_Event& events)
{
	// Handle game !
	// Write late.
	return true;
}

bool GameOverScreen(int& status, SDL_Event& events)
{
	g_background = CommonFunction::LoadImage("");
	if (g_background == NULL)
		return false;
	CommonFunction::ApplySurface(g_background, g_screen, 0, 0);
	if (events.type == SDL_KEYDOWN)
		status = StartScreen;
	return true;
}

/*
0. ERROR
1. Start Screen
2. Game screen
3. Game over screen
4. Pause screen
*/
int main()
{
	int status = StartScreen;

	bool is_quit = false;
	if (Init() == false)
	{
		std::cout << "INIT() is fail\n";
	}

	while (!is_quit)
	{
		while (SDL_PollEvent(&g_event))
		{
			if (g_event.type == SDL_QUIT)
			{
				is_quit = true;
				break;
			}
		}
		// Game handle
		switch (status)
		{
		case ERROR_screen:ERROR_Screen(); break;
		case StartScreen:Start_Game(status, g_event); break;
		case GameScreen:Game_screen(status, g_event); break;
		case GameOver:GameOverScreen(status, g_event); break;
		default: is_quit = true; break;
		}

		

		// Check g_screen
		if (SDL_Flip(g_screen) == -1)
		{
			std::cout << "ERROR Screen!\n";
			return 0;
		}
	}
	return 0;
}